{"ast":null,"code":"var _jsxFileName = \"/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/components/BookShelveElement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookShelfChanger from \"./BookShelfChanger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelveElement = ({\n  book,\n  updateBookShelf\n}) => {\n  _s();\n\n  const [bookShelf, setBookShelf] = useState(\"\");\n  const [bookTitle, setBookTitle] = useState(\"\");\n  const [bookAuthors, setBookAuthors] = useState([]);\n\n  const getCoverStyle = () => {\n    return book.imageLinks.thumbnail ? {\n      width: 128,\n      height: 193,\n      backgroundImage: `url(\"${book.imageLinks.thumbnail}\")`\n    } : {};\n  };\n\n  useEffect(() => {\n    const checkBooksKeyAvailable = () => {\n      book.shelf ? setBookShelf(book.shelf) : setBookShelf(\"none\");\n      book.title ? setBookTitle(book.title) : setBookTitle(\"\");\n      book.authors ? setBookAuthors(book.authors) : setBookAuthors([]);\n    };\n\n    checkBooksKeyAvailable();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: getCoverStyle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookShelfChanger, {\n          bookID: book.id,\n          bookShelf: bookShelf,\n          onChange: updateBookShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: bookTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), bookAuthors.map(author => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-authors\",\n        children: author\n      }, author, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookShelveElement, \"BlTwqalwJzuua8kUbcY+WzuaBzE=\");\n\n_c = BookShelveElement;\nBookShelveElement.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default BookShelveElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelveElement\");","map":{"version":3,"sources":["/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/components/BookShelveElement.js"],"names":["React","useEffect","useState","PropTypes","BookShelfChanger","BookShelveElement","book","updateBookShelf","bookShelf","setBookShelf","bookTitle","setBookTitle","bookAuthors","setBookAuthors","getCoverStyle","imageLinks","thumbnail","width","height","backgroundImage","checkBooksKeyAvailable","shelf","title","authors","id","map","author","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA+B;AAAA;;AAEvD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMY,aAAa,GAAG,MAAM;AAC1B,WACER,IAAI,CAACS,UAAL,CAAgBC,SAAhB,GACI;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE,GAAtB;AAA2BC,MAAAA,eAAe,EAAG,QAAOb,IAAI,CAACS,UAAL,CAAgBC,SAAU;AAA9E,KADJ,GAEI,EAHN;AAKD,GAND;;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,sBAAsB,GAAG,MAAM;AACnCd,MAAAA,IAAI,CAACe,KAAL,GACIZ,YAAY,CAACH,IAAI,CAACe,KAAN,CADhB,GAEIZ,YAAY,CAAC,MAAD,CAFhB;AAGAH,MAAAA,IAAI,CAACgB,KAAL,GACIX,YAAY,CAACL,IAAI,CAACgB,KAAN,CADhB,GAEIX,YAAY,CAAC,EAAD,CAFhB;AAGAL,MAAAA,IAAI,CAACiB,OAAL,GACIV,cAAc,CAACP,IAAI,CAACiB,OAAN,CADlB,GAEIV,cAAc,CAAC,EAAD,CAFlB;AAGD,KAVD;;AAWAO,IAAAA,sBAAsB;AACvB,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,KAAK,EAAEN,aAAa;AAFtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,gBAAD;AACE,UAAA,MAAM,EAAER,IAAI,CAACkB,EADf;AAEE,UAAA,SAAS,EAAEhB,SAFb;AAGE,UAAA,QAAQ,EAAED;AAHZ;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BG;AAA7B;AAAA;AAAA;AAAA;AAAA,cAXF,EAYGE,WAAW,CAACa,GAAZ,CAAiBC,MAAD,iBACf;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAAA,kBACGA;AADH,SAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAnDD;;GAAMrB,iB;;KAAAA,iB;AAqDNA,iBAAiB,CAACsB,SAAlB,GAA8B;AAC5BrB,EAAAA,IAAI,EAAEH,SAAS,CAACyB,MAAV,CAAiBC,UADK;AAE5BtB,EAAAA,eAAe,EAAEJ,SAAS,CAAC2B,IAAV,CAAeD;AAFJ,CAA9B;AAKA,eAAexB,iBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nconst BookShelveElement = ({ book, updateBookShelf }) => {\n\n  const [bookShelf, setBookShelf] = useState(\"\");\n  const [bookTitle, setBookTitle] = useState(\"\");\n  const [bookAuthors, setBookAuthors] = useState([]);\n\n  const getCoverStyle = () => {\n    return (\n      book.imageLinks.thumbnail \n        ? { width: 128, height: 193, backgroundImage: `url(\"${book.imageLinks.thumbnail}\")` } \n        : {}\n    );\n  }\n\n  useEffect(() => {\n    const checkBooksKeyAvailable = () => {\n      book.shelf \n        ? setBookShelf(book.shelf) \n        : setBookShelf(\"none\");\n      book.title \n        ? setBookTitle(book.title) \n        : setBookTitle(\"\");\n      book.authors \n        ? setBookAuthors(book.authors) \n        : setBookAuthors([]);\n    };\n    checkBooksKeyAvailable();\n  }, []);\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={getCoverStyle()}\n          ></div>\n          <BookShelfChanger \n            bookID={book.id}\n            bookShelf={bookShelf} \n            onChange={updateBookShelf}  />\n        </div>\n        <div className=\"book-title\">{bookTitle}</div>\n        {bookAuthors.map((author) => (\n          <div key={author} className=\"book-authors\">\n            {author}\n          </div>\n        ))}\n      </div>\n    </li>\n  );\n};\n\nBookShelveElement.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\n\nexport default BookShelveElement;\n"]},"metadata":{},"sourceType":"module"}