{"ast":null,"code":"var _jsxFileName = \"/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/components/BookShelveElement.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookShelfChanger from \"./BookShelfChanger\";\nimport * as BooksAPI from \"../apis/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelveElement = ({\n  bookID,\n  bookShelf,\n  bookCoverImageUrl,\n  bookTitle,\n  bookAuthors\n}) => {\n  const onBookShelfChanged = async ({\n    newShelf\n  }) => {\n    const query = {\n      id: bookID\n    };\n    console.log(query);\n    console.log(newShelf);\n    const res = await BooksAPI.update({\n      id: bookID\n    }, newShelf);\n    console.log(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(\"${bookCoverImageUrl}\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookShelfChanger, {\n          bookShelf: bookShelf,\n          onBookShelfChanged: onBookShelfChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: bookTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), bookAuthors.map(author => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-authors\",\n        children: author\n      }, author, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BookShelveElement;\nBookShelveElement.propTypes = {\n  bookID: PropTypes.string.isRequired,\n  bookShelf: PropTypes.string.isRequired,\n  bookCoverImageUrl: PropTypes.string.isRequired,\n  bookTitle: PropTypes.string.isRequired,\n  bookAuthors: PropTypes.array.isRequired\n};\nexport default BookShelveElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelveElement\");","map":{"version":3,"sources":["/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/components/BookShelveElement.js"],"names":["React","PropTypes","BookShelfChanger","BooksAPI","BookShelveElement","bookID","bookShelf","bookCoverImageUrl","bookTitle","bookAuthors","onBookShelfChanged","newShelf","query","id","console","log","res","update","width","height","backgroundImage","map","author","propTypes","string","isRequired","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,MADyB;AAEzBC,EAAAA,SAFyB;AAGzBC,EAAAA,iBAHyB;AAIzBC,EAAAA,SAJyB;AAKzBC,EAAAA;AALyB,CAAD,KAMpB;AAEJ,QAAMC,kBAAkB,GAAG,OAAO;AAACC,IAAAA;AAAD,GAAP,KAAsB;AAC/C,UAAMC,KAAK,GAAG;AAACC,MAAAA,EAAE,EAAER;AAAL,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,UAAMK,GAAG,GAAG,MAAMb,QAAQ,CAACc,MAAT,CAAgB;AAACJ,MAAAA,EAAE,EAAER;AAAL,KAAhB,EAA8BM,QAA9B,CAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD,GAND;;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,KAAK,EAAE;AACLE,YAAAA,KAAK,EAAE,GADF;AAELC,YAAAA,MAAM,EAAE,GAFH;AAGLC,YAAAA,eAAe,EAAG,QAAOb,iBAAkB;AAHtC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,gBAAD;AAAkB,UAAA,SAAS,EAAED,SAA7B;AAAwC,UAAA,kBAAkB,EAAEI;AAA5D;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZF,EAaGC,WAAW,CAACY,GAAZ,CAAiBC,MAAD,iBACf;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAAA,kBACGA;AADH,SAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAvCD;;KAAMlB,iB;AAyCNA,iBAAiB,CAACmB,SAAlB,GAA8B;AAC5BlB,EAAAA,MAAM,EAAEJ,SAAS,CAACuB,MAAV,CAAiBC,UADG;AAE5BnB,EAAAA,SAAS,EAAEL,SAAS,CAACuB,MAAV,CAAiBC,UAFA;AAG5BlB,EAAAA,iBAAiB,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UAHR;AAI5BjB,EAAAA,SAAS,EAAEP,SAAS,CAACuB,MAAV,CAAiBC,UAJA;AAK5BhB,EAAAA,WAAW,EAAER,SAAS,CAACyB,KAAV,CAAgBD;AALD,CAA9B;AAQA,eAAerB,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nimport * as BooksAPI from \"../apis/BooksAPI\";\n\nconst BookShelveElement = ({\n  bookID,\n  bookShelf,\n  bookCoverImageUrl,\n  bookTitle,\n  bookAuthors,\n}) => {\n\n  const onBookShelfChanged = async ({newShelf}) => {\n    const query = {id: bookID}\n    console.log(query)\n    console.log(newShelf)\n    const res = await BooksAPI.update({id: bookID}, newShelf);\n    console.log(res)\n  };\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(\"${bookCoverImageUrl}\")`,\n            }}\n          ></div>\n          <BookShelfChanger bookShelf={bookShelf} onBookShelfChanged={onBookShelfChanged}  />\n        </div>\n        <div className=\"book-title\">{bookTitle}</div>\n        {bookAuthors.map((author) => (\n          <div key={author} className=\"book-authors\">\n            {author}\n          </div>\n        ))}\n      </div>\n    </li>\n  );\n};\n\nBookShelveElement.propTypes = {\n  bookID: PropTypes.string.isRequired,\n  bookShelf: PropTypes.string.isRequired,\n  bookCoverImageUrl: PropTypes.string.isRequired,\n  bookTitle: PropTypes.string.isRequired,\n  bookAuthors: PropTypes.array.isRequired,\n};\n\nexport default BookShelveElement;\n"]},"metadata":{},"sourceType":"module"}