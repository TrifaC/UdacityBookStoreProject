{"ast":null,"code":"var _jsxFileName = \"/home/hkuit155/Desktop/Trifa_RN_Project/udacity_state_management/nd0191-c1-myreads/starter/src/components/BookShelveElement.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BookShelfChanger from \"./BookShelfChanger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelveElement = ({\n  bookID,\n  bookShelf,\n  bookCoverImageUrl,\n  bookTitle,\n  bookAuthors,\n  updateBookShelf\n}) => {\n  const checkAndReturnBookShelfValue = () => {\n    return bookShelf ? bookShelf : \"none\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"book\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: `url(\"${bookCoverImageUrl}\")`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BookShelfChanger, {\n          bookID: bookID,\n          bookShelf: checkAndReturnBookShelfValue(),\n          onChange: updateBookShelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-title\",\n        children: bookTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), bookAuthors.map(author => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-authors\",\n        children: author\n      }, author, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BookShelveElement;\nBookShelveElement.propTypes = {\n  bookID: PropTypes.string.isRequired,\n  bookShelf: PropTypes.string,\n  bookCoverImageUrl: PropTypes.string.isRequired,\n  bookTitle: PropTypes.string.isRequired,\n  bookAuthors: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\nexport default BookShelveElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelveElement\");","map":{"version":3,"sources":["/home/hkuit155/Desktop/Trifa_RN_Project/udacity_state_management/nd0191-c1-myreads/starter/src/components/BookShelveElement.js"],"names":["React","PropTypes","BookShelfChanger","BookShelveElement","bookID","bookShelf","bookCoverImageUrl","bookTitle","bookAuthors","updateBookShelf","checkAndReturnBookShelfValue","width","height","backgroundImage","map","author","propTypes","string","isRequired","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,MADyB;AAEzBC,EAAAA,SAFyB;AAGzBC,EAAAA,iBAHyB;AAIzBC,EAAAA,SAJyB;AAKzBC,EAAAA,WALyB;AAMzBC,EAAAA;AANyB,CAAD,KAOpB;AAEJ,QAAMC,4BAA4B,GAAG,MAAM;AACzC,WAAQL,SAAS,GAAGA,SAAH,GAAe,MAAhC;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,KAAK,EAAE;AACLM,YAAAA,KAAK,EAAE,GADF;AAELC,YAAAA,MAAM,EAAE,GAFH;AAGLC,YAAAA,eAAe,EAAG,QAAOP,iBAAkB;AAHtC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,gBAAD;AACE,UAAA,MAAM,EAAEF,MADV;AAEE,UAAA,SAAS,EAAEM,4BAA4B,EAFzC;AAGE,UAAA,QAAQ,EAAED;AAHZ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAeE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,cAfF,EAgBGC,WAAW,CAACM,GAAZ,CAAiBC,MAAD,iBACf;AAAkB,QAAA,SAAS,EAAC,cAA5B;AAAA,kBACGA;AADH,SAAUA,MAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAvCD;;KAAMZ,iB;AAyCNA,iBAAiB,CAACa,SAAlB,GAA8B;AAC5BZ,EAAAA,MAAM,EAAEH,SAAS,CAACgB,MAAV,CAAiBC,UADG;AAE5Bb,EAAAA,SAAS,EAAEJ,SAAS,CAACgB,MAFO;AAG5BX,EAAAA,iBAAiB,EAAEL,SAAS,CAACgB,MAAV,CAAiBC,UAHR;AAI5BX,EAAAA,SAAS,EAAEN,SAAS,CAACgB,MAAV,CAAiBC,UAJA;AAK5BV,EAAAA,WAAW,EAAEP,SAAS,CAACkB,KAAV,CAAgBD,UALD;AAM5BT,EAAAA,eAAe,EAAER,SAAS,CAACmB,IAAV,CAAeF;AANJ,CAA9B;AASA,eAAef,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookShelfChanger from \"./BookShelfChanger\";\n\nconst BookShelveElement = ({\n  bookID,\n  bookShelf,\n  bookCoverImageUrl,\n  bookTitle,\n  bookAuthors,\n  updateBookShelf\n}) => {\n\n  const checkAndReturnBookShelfValue = () => {\n    return (bookShelf ? bookShelf : \"none\");\n  }\n\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(\"${bookCoverImageUrl}\")`,\n            }}\n          ></div>\n          <BookShelfChanger \n            bookID={bookID}\n            bookShelf={checkAndReturnBookShelfValue()} \n            onChange={updateBookShelf}  />\n        </div>\n        <div className=\"book-title\">{bookTitle}</div>\n        {bookAuthors.map((author) => (\n          <div key={author} className=\"book-authors\">\n            {author}\n          </div>\n        ))}\n      </div>\n    </li>\n  );\n};\n\nBookShelveElement.propTypes = {\n  bookID: PropTypes.string.isRequired,\n  bookShelf: PropTypes.string,\n  bookCoverImageUrl: PropTypes.string.isRequired,\n  bookTitle: PropTypes.string.isRequired,\n  bookAuthors: PropTypes.array.isRequired,\n  updateBookShelf: PropTypes.func.isRequired\n};\n\nexport default BookShelveElement;\n"]},"metadata":{},"sourceType":"module"}