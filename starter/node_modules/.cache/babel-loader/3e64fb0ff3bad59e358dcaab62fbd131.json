{"ast":null,"code":"var _jsxFileName = \"/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/screens/MainScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport BookShelve from \"../components/BookShelve\";\nimport BookShelveElement from \"../components/BookShelveElement\";\nimport * as BooksAPI from \"../apis/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENTLY_READING_SHELF_KEY = \"currentlyReading\";\nconst CURRENTLU_READING_TITLE = \"Currently Reading\";\nconst WANT_TO_READ_SHELF_KEY = \"wantToRead\";\nconst WANT_TO_READ_TITLE = \"Want To Read\";\nconst READ_KEY = \"read\";\nconst READ_TITLE = \"Read\";\n\nconst MainScreen = () => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n\n  const getBooksFromSpecificShelf = ({\n    shelfName\n  }) => {\n    return books.filter(book => book.shelf === shelfName);\n  };\n\n  useEffect(() => {\n    const getBooksFromServer = async () => {\n      // Get All Book From Server.\n      const res = await BooksAPI.getAll();\n      console.log(res);\n      setBooks(res);\n    };\n\n    getBooksFromServer();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MyReads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-books-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BookShelve, {\n            bookShelfName: CURRENTLU_READING_TITLE,\n            books: getBooksFromSpecificShelf(CURRENTLY_READING_SHELF_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BookShelve, {\n            bookShelfName: WANT_TO_READ_TITLE,\n            books: getBooksFromSpecificShelf(WANT_TO_READ_SHELF_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(BookShelve, {\n            bookShelfName: READ_TITLE,\n            books: getBooksFromSpecificShelf(READ_KEY)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: \"Add a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainScreen, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = MainScreen;\nexport default MainScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainScreen\");","map":{"version":3,"sources":["/Users/trifa/Desktop/udacity_react/UdacityBookStoreProject/starter/src/screens/MainScreen.js"],"names":["React","useState","useEffect","PropTypes","Link","BookShelve","BookShelveElement","BooksAPI","CURRENTLY_READING_SHELF_KEY","CURRENTLU_READING_TITLE","WANT_TO_READ_SHELF_KEY","WANT_TO_READ_TITLE","READ_KEY","READ_TITLE","MainScreen","books","setBooks","getBooksFromSpecificShelf","shelfName","filter","book","shelf","getBooksFromServer","res","getAll","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;;AAEA,MAAMC,2BAA2B,GAAG,kBAApC;AACA,MAAMC,uBAAuB,GAAG,mBAAhC;AACA,MAAMC,sBAAsB,GAAG,YAA/B;AACA,MAAMC,kBAAkB,GAAG,cAA3B;AACA,MAAMC,QAAQ,GAAG,MAAjB;AACA,MAAMC,UAAU,GAAG,MAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMgB,yBAAyB,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAiB;AACjD,WACEH,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeH,SAAtC,CADF;AAGD,GAJD;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,kBAAkB,GAAG,YAAY;AACrC;AACA,YAAMC,GAAG,GAAG,MAAMhB,QAAQ,CAACiB,MAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAP,MAAAA,QAAQ,CAACO,GAAD,CAAR;AACD,KALD;;AAMAD,IAAAA,kBAAkB;AACnB,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,aAAa,EAAEb,uBADjB;AAEE,YAAA,KAAK,EAAEQ,yBAAyB,CAACT,2BAAD;AAFlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,UAAD;AACE,YAAA,aAAa,EAAEG,kBADjB;AAEE,YAAA,KAAK,EAAEM,yBAAyB,CAACP,sBAAD;AAFlC;AAAA;AAAA;AAAA;AAAA,kBALF,eASE,QAAC,UAAD;AACE,YAAA,aAAa,EAAEG,UADjB;AAEE,YAAA,KAAK,EAAEI,yBAAyB,CAACL,QAAD;AAFlC;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAoBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA/CD;;GAAME,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nimport BookShelve from \"../components/BookShelve\";\nimport BookShelveElement from \"../components/BookShelveElement\";\n\nimport * as BooksAPI from \"../apis/BooksAPI\";\n\nconst CURRENTLY_READING_SHELF_KEY = \"currentlyReading\";\nconst CURRENTLU_READING_TITLE = \"Currently Reading\";\nconst WANT_TO_READ_SHELF_KEY = \"wantToRead\";\nconst WANT_TO_READ_TITLE = \"Want To Read\";\nconst READ_KEY = \"read\";\nconst READ_TITLE = \"Read\";\n\nconst MainScreen = () => {\n  const [books, setBooks] = useState([]);\n\n  const getBooksFromSpecificShelf = ({shelfName}) => {\n    return (\n      books.filter((book) => book.shelf === shelfName)\n    );\n  }\n\n  useEffect(() => {\n    const getBooksFromServer = async () => {\n      // Get All Book From Server.\n      const res = await BooksAPI.getAll();\n      console.log(res);\n      setBooks(res);\n    };\n    getBooksFromServer();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <BookShelve\n              bookShelfName={CURRENTLU_READING_TITLE}\n              books={getBooksFromSpecificShelf(CURRENTLY_READING_SHELF_KEY)}\n            />\n            <BookShelve\n              bookShelfName={WANT_TO_READ_TITLE}\n              books={getBooksFromSpecificShelf(WANT_TO_READ_SHELF_KEY)}\n            />\n            <BookShelve\n              bookShelfName={READ_TITLE}\n              books={getBooksFromSpecificShelf(READ_KEY)}\n            />\n          </div>\n        </div>\n        <div className=\"open-search\">\n          <Link to=\"/search\">Add a book</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainScreen;\n"]},"metadata":{},"sourceType":"module"}